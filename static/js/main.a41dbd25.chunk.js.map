{"version":3,"sources":["serviceWorker.js","actions/NewsActions.js","Containers/News/News.js","actions/PhotosActions.js","Containers/Album/Album.js","Content.js","reducers/photos.js","reducers/news.js","reducers/index.js","store/configureStore.js","index.js","Layout.js"],"names":["Boolean","window","location","hostname","match","addPhotosRequest","type","addPhotosSuccess","news","payload","addPhotosError","err","News","props","handleOpenDialog","el","open","state","setState","content","webUrl","handleCloseDialog","scroll","this","getNews","classes","className","blockNews","length","map","elem","console","log","key","Math","random","newsItem","onClick","Typography","variant","webTitle","newsItemBox","author","description","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","dividers","DialogContentText","tabIndex","DialogActions","Button","color","React","Component","connect","store","newsBlock","dispatch","axios","method","url","then","response","data","results","catch","withStyles","theme","display","flexDirection","flexWrap","justifyContent","padding","margin","width","border","backgroundColor","cursor","textAlign","photos","Album","getPhotos","blockPictures","blockPicturesItem","src","medium","alt","height","IconButton","icon","handlerIcon","picturesItemNote","photographer","AlbumStyle","alignItems","listStyle","position","bottom","left","background","top","right","photosBlock","headers","Authorization","Content","path","Layout","title","from","to","initialState","loading","error","rootReducer","combineReducers","action","createStore","applyMiddleware","thunk","createMuiTheme","root","flexGrow","palette","primary","main","dark","contrastText","secondary","typography","fontFamily","join","overrides","zIndex","appBar","drawer","responsiveFontSizes","Application","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","iOS","process","browser","test","userAgent","useStyles","makeStyles","breakpoints","up","flexShrink","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","abbBar","link","textDecoration","withRouter","children","useState","mobileOpen","setMobileOpen","handleDrawerToggle","style","edge","anchor","onOpen","disableBackdropTransition","disableDiscovery","role","onKeyDown","button"],"mappings":"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","file":"static/js/main.a41dbd25.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from 'axios';\n\nexport const GET_NEWS_REQUEST = \"GET_NEWS_REQUEST\";\nexport const GET_NEWS_SUCCESS = \"GET_NEWS_SUCCESS\";\nexport const GET_NEWS_FAIL = \"GET_NEWS_FAIL\";\n\nexport const getNews = () => {\n    return dispatch => {\n        dispatch(addPhotosRequest());\n\n        axios({\n            method: 'get',\n            url:\"https://content.guardianapis.com/search?q=news&api-key=e0ad32c0-9fb7-439f-8cbf-41fdb32f22d3\",  \n        })\n        .then(response => {\n            dispatch(addPhotosSuccess(response.data.response.results))\n        })\n        .catch(err => {\n            dispatch(addPhotosError(err))\n        })\n    }\n}\n\nconst addPhotosRequest = () => {\n    return {\n        type: 'GET_NEWS_REQUEST',\n    }\n};\n\nconst addPhotosSuccess = (news) => {\n    return {\n        type: 'GET_NEWS_SUCCESS',\n        payload: news\n    }\n};\n\nconst addPhotosError = (err) => {\n    return {\n        type: 'GET_NEWS_FAIL',\n        payload: err\n    }\n};\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getNews } from '../../actions/NewsActions';\nimport { withStyles, Typography } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n    blockNews: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n        padding:\"0\",\n        margin:0\n        \n    },\n    newsItem: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"300px\",\n        margin: \"10px\",\n        border: \"1px solid #82aa9e36\",\n        backgroundColor: \"#82aa9e36\",\n        cursor: \"pointer\",\n        textAlign:\"center\",\n        \"&:hover\": {\n            backgroundColor: \"darkseagreen\"\n        }\n    },\n    newsItemBox:{\n        padding: \"5px 15px\",\n    }\n});\n\n\nclass News extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            scroll:'paper',\n            content:''\n        }\n    }\n\n    componentDidMount() {\n        this.props.getNews();\n    }\n\n    handleOpenDialog=(el)=>{\n        const {open} = this.state;\n        this.setState({\n            open:!open,\n            content:el.webUrl\n        })\n    }\n\n    handleCloseDialog=()=>{\n        const {open} = this.state;\n        this.setState({\n            open:!open\n        })\n    }\n\n    render() {\n        const { news, classes } = this.props;\n        const {open, scroll, content} = this.state;\n\n        return (\n            <ul className={classes.blockNews}>\n                {\n                    news.length > 0 && news.map(elem=>{\n                        console.log('el', elem)\n                        return elem.map((el) => {\n                            return (\n                                <li key={Math.random()} className={classes.newsItem} onClick={()=>this.handleOpenDialog(el)}>\n                                    <Typography variant=\"h6\">{el.webTitle}</Typography>\n                                    <div className={classes.newsItemBox}>\n                                        <h3>{el.author}</h3>\n                                        <p>{el.description}</p>\n                                    </div>\n                                </li>\n                            )\n                        })\n                    })\n                }\n\n                <Dialog\n                    open={open}\n                    onClose={this.handleCloseDialog}\n                    scroll={scroll}\n                    aria-labelledby=\"scroll-dialog-title\"\n                    aria-describedby=\"scroll-dialog-description\"\n                >\n                    <DialogTitle id=\"scroll-dialog-title\">Subscribe</DialogTitle>\n                    <DialogContent dividers={scroll === 'paper'}>\n                        <DialogContentText\n                            id=\"scroll-dialog-description\"\n                            tabIndex={-1}\n                        >\n                            {content && content}\n                        </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                        <Button onClick={this.handleCloseDialog} color=\"primary\">\n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </ul>\n        )\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        news: store.newsBlock.news\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getNews: () => dispatch(getNews())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(News));","import axios from 'axios';\n\nexport const GET_PHOTOS_REQUEST = \"GET_PHOTOS_REQUEST\";\nexport const GET_PHOTOS_SUCCESS = \"GET_PHOTOS_SUCCESS\";\nexport const GET_PHOTOS_FAIL = \"GET_PHOTOS_FAIL\";\n\nexport const getPhotos = () => {\n    return dispatch => {\n        dispatch(addPhotosRequest());\n\n        axios({\n            method: 'get',\n            url: `https://api.pexels.com/v1/search?query=nature&per_page=80\"`,\n            headers:{Authorization:\"563492ad6f9170000100000190b900612c0e41a281be655afc75973d\"}\n        })\n        .then(response => {\n            dispatch(addPhotosSuccess(response.data))\n        })\n        .catch(err => {\n            dispatch(addPhotosError(err))\n        })\n    }\n}\n\nconst addPhotosRequest = () => {\n    return {\n        type: 'GET_PHOTOS_REQUEST',\n    }\n};\n\nconst addPhotosSuccess = (photos) => {\n    return {\n        type: 'GET_PHOTOS_SUCCESS',\n        payload: photos\n    }\n};\n\nconst addPhotosError = (err) => {\n    return {\n        type: 'GET_PHOTOS_FAIL',\n        payload: err\n    }\n};\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getPhotos } from '../../actions/PhotosActions';\nimport { withStyles } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\n\n// const pictureWidth = \"300px\";\nconst styles = theme => ({\n    blockPictures: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n        margin:0,\n        padding:0\n    },\n    blockPicturesItem: {\n        listStyle: \"none\",\n        padding: \"10px 20px\",\n        position: \"relative\",\n        // [theme.breakpoints.up('sm')]: {\n        //     width: pictureWidth,\n        //     // flexShrink: 0,\n        // },\n    },\n    picturesItemNote: {\n        bottom: \"10px\",\n        left: \"20px\",\n        height: \"20px\",\n        padding: \"10px\",\n        color: \"white\",\n        position: \"absolute\",\n        background: \"linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\"\n    },\n    icon: {\n        position: \"absolute\",\n        color: \"white\",\n        top: \"10px\",\n        right: \"20px\"\n    },\n});\n\nclass Album extends React.Component {\n\n\n    componentDidMount() {\n        this.props.getPhotos();\n    }\n\n    render() {\n        const { photos, classes } = this.props;\n        return (\n            <div>\n                <ul className={classes.blockPictures}>\n                    {\n                        photos.length && photos[0].photos.map((el) => {\n                            return (\n                                <li key={el.id} className={classes.blockPicturesItem}>\n                                    <img src={el.src.medium} alt=\"\" key={el.id} height=\"200px\" width=\"250px\"/>\n                                    <IconButton className={classes.icon} onClick={this.handlerIcon}>\n                                        <StarBorderIcon/>\n                                    </IconButton>\n                                    <span className={classes.picturesItemNote}>{el.photographer}</span>\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        photos: store.photosBlock.photos,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getPhotos: () => dispatch(getPhotos()),\n    }\n}\n\nconst AlbumStyle = withStyles(styles)(Album)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AlbumStyle);\n\n\n\n","import React from 'react';\nimport { Route, Switch, Redirect} from 'react-router-dom';\nimport News from './Containers/News/News';\nimport Album from './Containers/Album/Album';\nimport Layout from './Layout';\n\nclass Content extends React.Component {\n\n  render() {\n    return (\n        <Switch>\n\n          <Route path=\"/news\">\n            <Layout title=\"Your news\">\n              <News />\n            </Layout>\n          </Route>\n\n          <Route path=\"/album\">\n            <Layout title=\"Your album\">\n              <Album />\n            </Layout>\n          </Route>\n\n          <Redirect from=\"/\" to=\"/album\" />\n\n        </Switch>\n\n    );\n  }\n}\n\nexport default Content;\n\n\n\n","import {GET_PHOTOS_REQUEST, GET_PHOTOS_SUCCESS, GET_PHOTOS_FAIL} from '../actions/PhotosActions';\n\nconst initialState = {\n    photos:[],\n    loading: false,\n    error: null\n}\n\nexport function photosReducer(state = initialState, action){\n    \n    switch (action.type) {\n\n        case GET_PHOTOS_REQUEST:\n            return { \n                ...state, \n                loading:true\n            }\n\n        case GET_PHOTOS_SUCCESS:\n            return { \n                ...state, \n                loading: false,\n                photos: [...state.photos, action.payload]  \n            }\n\n        case GET_PHOTOS_FAIL:\n            return { \n                ...state, \n                error: action.payload.err, \n                loading: false \n            }\n\n        default:\n            return state\n    }\n}","import {GET_NEWS_REQUEST, GET_NEWS_SUCCESS, GET_NEWS_FAIL} from '../actions/NewsActions';\n\nconst initialState = {\n    news:[],\n    loading: false,\n    error: null\n}\n\nexport function newsReducer(state = initialState, action){\n\n    switch (action.type) {\n\n        case GET_NEWS_REQUEST:\n            return { \n                ...state, \n                loading:true\n            }\n\n        case GET_NEWS_SUCCESS:\n            return { \n                ...state, \n                loading: false,\n                news: [...state.news, action.payload]  \n            }\n\n        case GET_NEWS_FAIL:\n            return { \n                ...state, \n                error: action.payload.err, \n                loading: false \n            }\n\n        default:\n            return state\n    }\n}","import {combineReducers} from 'redux';\nimport {photosReducer} from './photos';\nimport {newsReducer} from './news';\n\n\nexport const rootReducer = combineReducers({\n    photosBlock: photosReducer,\n    newsBlock: newsReducer,\n\n})\n\n\n","import {createStore, applyMiddleware} from \"redux\";\nimport {rootReducer} from '../reducers/index';\nimport thunk from \"redux-thunk\";\n\nexport const store = createStore(rootReducer, {}, applyMiddleware(thunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { HashRouter} from 'react-router-dom';\nimport responsiveFontSizes from '@material-ui/core/styles/responsiveFontSizes';\nimport Content from './Content';\nimport { Provider } from 'react-redux';\nimport {store} from './store/configureStore';\n\nlet theme = createMuiTheme({\n  root: {\n    flexGrow: 1,\n  },\n  palette: {\n    primary: {\n      main: '#45B0D2',\n      dark: '#004680',\n      contrastText: '#ffffff',\n    },\n    secondary: {\n      main: '#d7efff',\n      dark: '#d4e6f2',\n      contrastText: '#0176B8',\n    },\n  },\n  typography: {\n    fontFamily: [\n      'Arial',\n      '-apple-system',\n      'BlinkMacSystemFont',\n      'Helvetica',\n      'Neue',\n      'Helvetica',\n      'sans-serif'\n    ].join(','),\n  },\n  overrides: {\n  }\n  ,\n})\n  ;\ntheme.zIndex.appBar = theme.zIndex.drawer + 1;\ntheme = responsiveFontSizes(theme);\n\nconst Application = () => {\n  return (\n    <HashRouter>\n      <Content/>\n    </HashRouter>\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <Application />\n      </Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState } from 'react';\n\nimport { withRouter, NavLink } from 'react-router-dom';\nimport { IconButton, Toolbar, AppBar } from '@material-ui/core/';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\nimport PublicIcon from '@material-ui/icons/Public';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst drawerWidth = 240;\nconst iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n\nconst useStyles = makeStyles((theme) => {\n    return ({\n        root: {\n            display: 'flex',\n        },\n        title: {\n            flexGrow: 1,\n        },\n        drawer: {\n            [theme.breakpoints.up('sm')]: {\n                width: drawerWidth,\n                flexShrink: 0,\n            },\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n            // [theme.breakpoints.up('sm')]: {\n            //     display: 'none',\n            // },\n        },\n        toolbar: theme.mixins.toolbar,\n        drawerPaper: {\n            width: drawerWidth,\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3),\n        },\n        abbBar: {\n            backgroundColor: \"#85b6b88f\"\n        },\n        link: {\n            textDecoration: 'none',\n            color: \"black\"\n        },\n    })\n});\n\nfunction Layout({ children, title }) {\n    const classes = useStyles();\n\n    const [mobileOpen, setMobileOpen] = useState(false);\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"fixed\" className={classes.abbBar}>\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {title}\n                    </Typography>\n                    <span style={{ flexGrow: 1 }}></span>\n                    <IconButton\n                        color=\"inherit\"\n                        edge=\"end\"\n                        onClick={handleDrawerToggle}\n                        className={classes.menuButton}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <div>\n                <SwipeableDrawer\n                    anchor={'left'}\n                    open={mobileOpen}\n                    onClose={handleDrawerToggle}\n                    onOpen={handleDrawerToggle}\n                    disableBackdropTransition={!iOS}\n                    disableDiscovery={iOS}\n                >\n                    <div\n                        role=\"presentation\"\n                        onClick={handleDrawerToggle}\n                        onKeyDown={handleDrawerToggle}\n                    >\n                        <List>\n                            <NavLink to=\"/news\" key=\"news\" className={classes.link}>\n                                <ListItem button>\n                                    <ListItemIcon><PublicIcon /></ListItemIcon>\n                                    <ListItemText primary=\"News\" />\n                                </ListItem>\n                            </NavLink>\n                            <NavLink to=\"/album\" key=\"album\" className={classes.link}>\n                                <ListItem button>\n                                    <ListItemIcon><PhotoCameraIcon /></ListItemIcon>\n                                    <ListItemText primary=\"Album\" />\n                                </ListItem>\n                            </NavLink>\n                        </List>\n                    </div>\n                </SwipeableDrawer>\n            </div>\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\n                {children}\n            </main>\n        </div >\n    );\n}\n\nexport default withRouter(Layout);\n\n"],"sourceRoot":""}